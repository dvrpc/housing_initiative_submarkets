setwd("C:/Users/bcarn/Documents/dvrpc/housing_initiative_submarkets")
df <- scale(df)
print(df)
df <- read.csv("G:\\Shared drives\\FY22 Regional Housing Initiative\\Data\\ACS5_2020\\acs5_2020_variables.csv", colClasses=c("GEOID"="character", "year"="character"))
View(df)
View(df)
print(df)
df <- read.csv("G:\\Shared drives\\FY22 Regional Housing Initiative\\Data\\ACS5_2020\\acs5_2020_variables.csv", colClasses=c("GEOID"="character", "year"="character"))
df <- subset(df, select -c(year, POP_TOT, HH_TOT))
print(df)
print(df)
df <- subset(df, select -c("year", "POP_TOT", "HH_TOT"))
df <- select(df, -c(pop, HH_TOT, POP_TOT))
library(dplyr)
df <- read.csv("G:\\Shared drives\\FY22 Regional Housing Initiative\\Data\\ACS5_2020\\acs5_2020_variables.csv", colClasses=c("GEOID"="character", "year"="character"))
df <- select(df, -c(pop, HH_TOT, POP_TOT))
print(df)
df <- read.csv("G:\\Shared drives\\FY22 Regional Housing Initiative\\Data\\ACS5_2020\\acs5_2020_variables.csv", colClasses=c("GEOID"="character", "year"="character"))
df <- subset(df, -c(pop, HH_TOT, POP_TOT))
print(df)
View(df)
library(dplyr)
df <- read.csv("G:\\Shared drives\\FY22 Regional Housing Initiative\\Data\\ACS5_2020\\acs5_2020_variables.csv", colClasses=c("GEOID"="character", "year"="character"))
df <- select(df, -c(year, HH_TOT, POP_TOT))
View(df)
df <- select(df, -c(year, HH_TOT, POP_TOT, UNIT_MIS))
library(dplyr)
df <- read.csv("G:\\Shared drives\\FY22 Regional Housing Initiative\\Data\\ACS5_2020\\acs5_2020_variables.csv", colClasses=c("GEOID"="character", "year"="character"))
df <- select(df, -c(year, HH_TOT, POP_TOT, UNIT_MIS))
library(dplyr)
df <- read.csv("G:\\Shared drives\\FY22 Regional Housing Initiative\\Data\\ACS5_2020\\acs5_2020_variables.csv", colClasses=c("GEOID"="character", "year"="character"))
df <- select(df, -c(year, HH_TOT, POP_TOT, UNIT_MIS))
pam(df, k, metric = "euclidean", stand = FALSE)
install.packages("pam")
library(pam)
pam(df, k, metric = "euclidean", stand = FALSE)
install.packages("cluster")
library(cluster)
df <- read.csv("G:\\Shared drives\\FY22 Regional Housing Initiative\\Data\\ACS5_2020\\acs5_2020_variables.csv", colClasses=c("GEOID"="character", "year"="character"))
df <- select(df, -c(year, HH_TOT, POP_TOT, UNIT_MIS))
library(dplyr)
library(factoextra)
library(cluster)
df <- read.csv("G:\\Shared drives\\FY22 Regional Housing Initiative\\Data\\ACS5_2020\\acs5_2020_variables.csv", colClasses=c("GEOID"="character", "year"="character"))
df <- select(df, -c(year, HH_TOT, POP_TOT, UNIT_MIS))
test <- pam(df, k, metric = "euclidean", stand = FALSE)
library(dplyr)
library(factoextra)
library(cluster)
df <- read.csv("G:\\Shared drives\\FY22 Regional Housing Initiative\\Data\\ACS5_2020\\acs5_2020_variables.csv", colClasses=c("GEOID"="character", "year"="character"))
df <- select(df, -c(year, HH_TOT, POP_TOT, UNIT_MIS))
fviz_nbclust(df, pam, method = "wss")
View(df)
# install.packages("cluster")
library(dplyr)
library(factoextra)
library(cluster)
df <- read.csv("G:\\Shared drives\\FY22 Regional Housing Initiative\\Data\\ACS5_2020\\acs5_2020_variables.csv", colClasses=c("GEOID"="character", "year"="character"))
df <- select(df, -c(year, HH_TOT, POP_TOT, UNIT_MIS))
fviz_nbclust(select(df, -c(GEOID)), pam, method = "wss")
library(dplyr)
library(factoextra)
library(cluster)
df <- read.csv("G:\\Shared drives\\FY22 Regional Housing Initiative\\Data\\ACS5_2020\\acs5_2020_variables.csv", colClasses=c("GEOID"="character", "year"="character"))
df <- select(df, -c(year, HH_TOT, POP_TOT, UNIT_MIS))
gap_stat <- clusGap(df,
k.max = 10,
B = 50)
fviz_gap_stat(gap_stat)
library(dplyr)
library(factoextra)
library(cluster)
df <- read.csv("G:\\Shared drives\\FY22 Regional Housing Initiative\\Data\\ACS5_2020\\acs5_2020_variables.csv", colClasses=c("GEOID"="character", "year"="character"))
df <- select(df, -c(year, HH_TOT, POP_TOT, UNIT_MIS))
gap_stat <- clusGap(df,
FUN = pam,
k.max = 10,
B = 50)
fviz_gap_stat(gap_stat)
library(dplyr)
library(factoextra)
library(cluster)
df <- read.csv("G:\\Shared drives\\FY22 Regional Housing Initiative\\Data\\ACS5_2020\\acs5_2020_variables.csv", colClasses=c("GEOID"="character", "year"="character"))
df <- select(df, -c(year, HH_TOT, POP_TOT, UNIT_MIS))
gap_stat <- clusGap(df,
FUN = pam,
K.max = 10,
B = 50)
fviz_gap_stat(gap_stat)
df <- read.csv("G:\\Shared drives\\FY22 Regional Housing Initiative\\Data\\ACS5_2020\\acs5_2020_variables.csv", colClasses=c("GEOID"="character", "year"="character"))
df <- scale(df)
library(dplyr)
library(factoextra)
library(cluster)
df <- read.csv("G:\\Shared drives\\FY22 Regional Housing Initiative\\Data\\ACS5_2020\\acs5_2020_variables.csv", colClasses=c("GEOID"="character", "year"="character"))
df <- scale(df)
View(df)
df <- read.csv("G:\\Shared drives\\FY22 Regional Housing Initiative\\Data\\ACS5_2020\\acs5_2020_variables.csv", colClasses=c("GEOID"="character", "year"="character"), row.names="GEOID")
df <- scale(df)
View(df)
df <- read.csv("G:\\Shared drives\\FY22 Regional Housing Initiative\\Data\\ACS5_2020\\acs5_2020_variables.csv", colClasses=c("GEOID"="character", "year"="character"), row.names="GEOID")
df <- select(df, -c(year, HH_TOT, POP_TOT, UNIT_MIS))
df <- scale(df)
gap_stat <- clusGap(df,
FUN = pam,
K.max = 10,
B = 50)
fviz_gap_stat(gap_stat)
df <- read.csv("G:\\Shared drives\\FY22 Regional Housing Initiative\\Data\\ACS5_2020\\acs5_2020_variables.csv", colClasses=c("GEOID"="character", "year"="character"), row.names="GEOID")
df <- select(df, -c(year, HH_TOT, POP_TOT, UNIT_MIS))
df <- scale(df)
pam(df, 8,, metric = "euclidean", stand = FALSE)
df <- read.csv("G:\\Shared drives\\FY22 Regional Housing Initiative\\Data\\ACS5_2020\\acs5_2020_variables.csv", colClasses=c("GEOID"="character", "year"="character"), row.names="GEOID")
df <- select(df, -c(year, HH_TOT, POP_TOT, UNIT_MIS))
df <- scale(df)
pam(df, 8, metric = "euclidean", stand = FALSE)
df <- read.csv("G:\\Shared drives\\FY22 Regional Housing Initiative\\Data\\ACS5_2020\\acs5_2020_variables.csv", colClasses=c("GEOID"="character", "year"="character"), row.names="GEOID")
df <- select(df, -c(year, HH_TOT, POP_TOT, UNIT_MIS))
df <- scale(df)
pam(df, 8, metric = "euclidean", stand = TRUE)
wbPam <- pam(x=df, k=8, + keep.diss=TRUE, keep.data=TRUE)
wbPam <- pam(x=df, k=8, keep.diss=TRUE, keep.data=TRUE)
View(df)
library(dplyr)
library(factoextra)
library(cluster)
df <- read.csv("G:\\Shared drives\\FY22 Regional Housing Initiative\\Data\\ACS5_2020\\acs5_2020_variables.csv", colClasses=c("GEOID"="character", "year"="character"), row.names="GEOID")
df <- select(df, -c(year, HH_TOT, POP_TOT, UNIT_MIS))
# Find missing values
list_na <- colnames(df)[apply(df, 2, anyNA)]
list_na
library(dplyr)
library(factoextra)
library(cluster)
df <- read.csv("G:\\Shared drives\\FY22 Regional Housing Initiative\\Data\\ACS5_2020\\acs5_2020_variables.csv", colClasses=c("GEOID"="character", "year"="character"), row.names="GEOID")
df <- select(df, -c(year, HH_TOT, POP_TOT, UNIT_MIS))
# Find missing values
list_na <- colnames(df)[apply(df, 2, anyNA)]
list_na
# Impute missing values
median_missing <- apply(df[,colnames(df) %in% list_na],
2,
median,
na.rm = TRUE)
df_impute_median < -data.frame(
sapply(
df,
function(x) ifelse(is.na(x),
median(x, na.rm = TRUE),
x)))
print(df_impute_median)
median_missing <- apply(df[,colnames(df) %in% list_na],
2,
median,
na.rm = TRUE)
df_impute_median < -data.frame(
sapply(
df,
function(x) ifelse(is.na(x),
median(x, na.rm = TRUE),
x)))
print(df_impute_median)
# install.packages("dplyr")
# install.packages("tidyverse")
# install.packages("magrittr")
# install.packages("pipeR")
# install.packages("factoextra")
# install.packages("cluster")
library(dplyr)
library(factoextra)
library(cluster)
df <- read.csv("G:\\Shared drives\\FY22 Regional Housing Initiative\\Data\\ACS5_2020\\acs5_2020_variables.csv", colClasses=c("GEOID"="character", "year"="character"), row.names="GEOID")
df <- select(df, -c(year, HH_TOT, POP_TOT, UNIT_MIS))
# Find missing values
list_na <- colnames(df)[apply(df, 2, anyNA)]
list_na
# Impute missing values
median_missing <- apply(df[,colnames(df) %in% list_na],
2,
median,
na.rm = TRUE)
df_impute_median < -data.frame(
sapply(
df,
function(x) ifelse(is.na(x),
mean(x, na.rm = TRUE),
x)))
print(df_impute_median)
df_impute_median < -data.frame(
sapply(
df,
function(x) ifelse(is.na(x),
mean(x, na.rm = TRUE),
x)))
df_impute_median <- data.frame(
sapply(
df,
function(x) ifelse(is.na(x),
mean(x, na.rm = TRUE),
x)))
View(df_impute_median)
df_impute_median <- data.frame(
sapply(
df,
function(x) ifelse(is.na(x),
median(x, na.rm = TRUE),
x)))
df_scale <- scale(df_impute_median)
wbPam <- pam(x=df_scale, k=8, keep.diss=TRUE, keep.data=TRUE)
View(wbPam)
gap_stat <- clusGap(df_scale,
FUN = pam,
K.max = 10,
B = 50)
fviz_gap_stat(gap_stat)
library(dplyr)
library(factoextra)
library(cluster)
df <- read.csv("G:\\Shared drives\\FY22 Regional Housing Initiative\\Data\\ACS5_2020\\acs5_2020_variables.csv", colClasses=c("GEOID"="character", "year"="character"), row.names="GEOID")
df <- select(df, -c(year, HH_TOT, POP_TOT, UNIT_MIS))
# Find missing values
list_na <- colnames(df)[apply(df, 2, anyNA)]
list_na
# Impute missing values
df_impute_median <- data.frame(
sapply(
df,
function(x) ifelse(is.na(x),
median(x, na.rm = TRUE),
x)))
print(df_impute_median)
# Scale dataframe
df_scale <- scale(df_impute_median)
wbPam <- pam(x=df_scale, k=8, keep.diss=TRUE, keep.data=TRUE)
gap_stat <- clusGap(df_scale,
FUN = pam,
K.max = 15,
B = 50)
fviz_gap_stat(gap_stat)
