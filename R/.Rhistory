setwd("C:/Users/bcarn/Documents/dvrpc/housing_initiative_submarkets")
df <- scale(df)
print(df)
df <- read.csv("G:\\Shared drives\\FY22 Regional Housing Initiative\\Data\\ACS5_2020\\acs5_2020_variables.csv", colClasses=c("GEOID"="character", "year"="character"))
View(df)
View(df)
print(df)
df <- read.csv("G:\\Shared drives\\FY22 Regional Housing Initiative\\Data\\ACS5_2020\\acs5_2020_variables.csv", colClasses=c("GEOID"="character", "year"="character"))
df <- subset(df, select -c(year, POP_TOT, HH_TOT))
print(df)
print(df)
df <- subset(df, select -c("year", "POP_TOT", "HH_TOT"))
df <- select(df, -c(pop, HH_TOT, POP_TOT))
library(dplyr)
df <- read.csv("G:\\Shared drives\\FY22 Regional Housing Initiative\\Data\\ACS5_2020\\acs5_2020_variables.csv", colClasses=c("GEOID"="character", "year"="character"))
df <- select(df, -c(pop, HH_TOT, POP_TOT))
print(df)
df <- read.csv("G:\\Shared drives\\FY22 Regional Housing Initiative\\Data\\ACS5_2020\\acs5_2020_variables.csv", colClasses=c("GEOID"="character", "year"="character"))
df <- subset(df, -c(pop, HH_TOT, POP_TOT))
print(df)
View(df)
library(dplyr)
df <- read.csv("G:\\Shared drives\\FY22 Regional Housing Initiative\\Data\\ACS5_2020\\acs5_2020_variables.csv", colClasses=c("GEOID"="character", "year"="character"))
df <- select(df, -c(year, HH_TOT, POP_TOT))
View(df)
df <- select(df, -c(year, HH_TOT, POP_TOT, UNIT_MIS))
library(dplyr)
df <- read.csv("G:\\Shared drives\\FY22 Regional Housing Initiative\\Data\\ACS5_2020\\acs5_2020_variables.csv", colClasses=c("GEOID"="character", "year"="character"))
df <- select(df, -c(year, HH_TOT, POP_TOT, UNIT_MIS))
library(dplyr)
df <- read.csv("G:\\Shared drives\\FY22 Regional Housing Initiative\\Data\\ACS5_2020\\acs5_2020_variables.csv", colClasses=c("GEOID"="character", "year"="character"))
df <- select(df, -c(year, HH_TOT, POP_TOT, UNIT_MIS))
pam(df, k, metric = "euclidean", stand = FALSE)
install.packages("pam")
library(pam)
pam(df, k, metric = "euclidean", stand = FALSE)
install.packages("cluster")
library(cluster)
df <- read.csv("G:\\Shared drives\\FY22 Regional Housing Initiative\\Data\\ACS5_2020\\acs5_2020_variables.csv", colClasses=c("GEOID"="character", "year"="character"))
df <- select(df, -c(year, HH_TOT, POP_TOT, UNIT_MIS))
library(dplyr)
library(factoextra)
library(cluster)
df <- read.csv("G:\\Shared drives\\FY22 Regional Housing Initiative\\Data\\ACS5_2020\\acs5_2020_variables.csv", colClasses=c("GEOID"="character", "year"="character"))
df <- select(df, -c(year, HH_TOT, POP_TOT, UNIT_MIS))
test <- pam(df, k, metric = "euclidean", stand = FALSE)
library(dplyr)
library(factoextra)
library(cluster)
df <- read.csv("G:\\Shared drives\\FY22 Regional Housing Initiative\\Data\\ACS5_2020\\acs5_2020_variables.csv", colClasses=c("GEOID"="character", "year"="character"))
df <- select(df, -c(year, HH_TOT, POP_TOT, UNIT_MIS))
fviz_nbclust(df, pam, method = "wss")
View(df)
# install.packages("cluster")
library(dplyr)
library(factoextra)
library(cluster)
df <- read.csv("G:\\Shared drives\\FY22 Regional Housing Initiative\\Data\\ACS5_2020\\acs5_2020_variables.csv", colClasses=c("GEOID"="character", "year"="character"))
df <- select(df, -c(year, HH_TOT, POP_TOT, UNIT_MIS))
fviz_nbclust(select(df, -c(GEOID)), pam, method = "wss")
library(dplyr)
library(factoextra)
library(cluster)
df <- read.csv("G:\\Shared drives\\FY22 Regional Housing Initiative\\Data\\ACS5_2020\\acs5_2020_variables.csv", colClasses=c("GEOID"="character", "year"="character"))
df <- select(df, -c(year, HH_TOT, POP_TOT, UNIT_MIS))
gap_stat <- clusGap(df,
k.max = 10,
B = 50)
fviz_gap_stat(gap_stat)
library(dplyr)
library(factoextra)
library(cluster)
df <- read.csv("G:\\Shared drives\\FY22 Regional Housing Initiative\\Data\\ACS5_2020\\acs5_2020_variables.csv", colClasses=c("GEOID"="character", "year"="character"))
df <- select(df, -c(year, HH_TOT, POP_TOT, UNIT_MIS))
gap_stat <- clusGap(df,
FUN = pam,
k.max = 10,
B = 50)
fviz_gap_stat(gap_stat)
library(dplyr)
library(factoextra)
library(cluster)
df <- read.csv("G:\\Shared drives\\FY22 Regional Housing Initiative\\Data\\ACS5_2020\\acs5_2020_variables.csv", colClasses=c("GEOID"="character", "year"="character"))
df <- select(df, -c(year, HH_TOT, POP_TOT, UNIT_MIS))
gap_stat <- clusGap(df,
FUN = pam,
K.max = 10,
B = 50)
fviz_gap_stat(gap_stat)
df <- read.csv("G:\\Shared drives\\FY22 Regional Housing Initiative\\Data\\ACS5_2020\\acs5_2020_variables.csv", colClasses=c("GEOID"="character", "year"="character"))
df <- scale(df)
library(dplyr)
library(factoextra)
library(cluster)
df <- read.csv("G:\\Shared drives\\FY22 Regional Housing Initiative\\Data\\ACS5_2020\\acs5_2020_variables.csv", colClasses=c("GEOID"="character", "year"="character"))
df <- scale(df)
View(df)
df <- read.csv("G:\\Shared drives\\FY22 Regional Housing Initiative\\Data\\ACS5_2020\\acs5_2020_variables.csv", colClasses=c("GEOID"="character", "year"="character"), row.names="GEOID")
df <- scale(df)
View(df)
df <- read.csv("G:\\Shared drives\\FY22 Regional Housing Initiative\\Data\\ACS5_2020\\acs5_2020_variables.csv", colClasses=c("GEOID"="character", "year"="character"), row.names="GEOID")
df <- select(df, -c(year, HH_TOT, POP_TOT, UNIT_MIS))
df <- scale(df)
gap_stat <- clusGap(df,
FUN = pam,
K.max = 10,
B = 50)
fviz_gap_stat(gap_stat)
df <- read.csv("G:\\Shared drives\\FY22 Regional Housing Initiative\\Data\\ACS5_2020\\acs5_2020_variables.csv", colClasses=c("GEOID"="character", "year"="character"), row.names="GEOID")
df <- select(df, -c(year, HH_TOT, POP_TOT, UNIT_MIS))
df <- scale(df)
pam(df, 8,, metric = "euclidean", stand = FALSE)
df <- read.csv("G:\\Shared drives\\FY22 Regional Housing Initiative\\Data\\ACS5_2020\\acs5_2020_variables.csv", colClasses=c("GEOID"="character", "year"="character"), row.names="GEOID")
df <- select(df, -c(year, HH_TOT, POP_TOT, UNIT_MIS))
df <- scale(df)
pam(df, 8, metric = "euclidean", stand = FALSE)
df <- read.csv("G:\\Shared drives\\FY22 Regional Housing Initiative\\Data\\ACS5_2020\\acs5_2020_variables.csv", colClasses=c("GEOID"="character", "year"="character"), row.names="GEOID")
df <- select(df, -c(year, HH_TOT, POP_TOT, UNIT_MIS))
df <- scale(df)
pam(df, 8, metric = "euclidean", stand = TRUE)
wbPam <- pam(x=df, k=8, + keep.diss=TRUE, keep.data=TRUE)
wbPam <- pam(x=df, k=8, keep.diss=TRUE, keep.data=TRUE)
View(df)
library(dplyr)
library(factoextra)
library(cluster)
df <- read.csv("G:\\Shared drives\\FY22 Regional Housing Initiative\\Data\\ACS5_2020\\acs5_2020_variables.csv", colClasses=c("GEOID"="character", "year"="character"), row.names="GEOID")
df <- select(df, -c(year, HH_TOT, POP_TOT, UNIT_MIS))
# Find missing values
list_na <- colnames(df)[apply(df, 2, anyNA)]
list_na
library(dplyr)
library(factoextra)
library(cluster)
df <- read.csv("G:\\Shared drives\\FY22 Regional Housing Initiative\\Data\\ACS5_2020\\acs5_2020_variables.csv", colClasses=c("GEOID"="character", "year"="character"), row.names="GEOID")
df <- select(df, -c(year, HH_TOT, POP_TOT, UNIT_MIS))
# Find missing values
list_na <- colnames(df)[apply(df, 2, anyNA)]
list_na
# Impute missing values
median_missing <- apply(df[,colnames(df) %in% list_na],
2,
median,
na.rm = TRUE)
df_impute_median < -data.frame(
sapply(
df,
function(x) ifelse(is.na(x),
median(x, na.rm = TRUE),
x)))
print(df_impute_median)
median_missing <- apply(df[,colnames(df) %in% list_na],
2,
median,
na.rm = TRUE)
df_impute_median < -data.frame(
sapply(
df,
function(x) ifelse(is.na(x),
median(x, na.rm = TRUE),
x)))
print(df_impute_median)
# install.packages("dplyr")
# install.packages("tidyverse")
# install.packages("magrittr")
# install.packages("pipeR")
# install.packages("factoextra")
# install.packages("cluster")
library(dplyr)
library(factoextra)
library(cluster)
df <- read.csv("G:\\Shared drives\\FY22 Regional Housing Initiative\\Data\\ACS5_2020\\acs5_2020_variables.csv", colClasses=c("GEOID"="character", "year"="character"), row.names="GEOID")
df <- select(df, -c(year, HH_TOT, POP_TOT, UNIT_MIS))
# Find missing values
list_na <- colnames(df)[apply(df, 2, anyNA)]
list_na
# Impute missing values
median_missing <- apply(df[,colnames(df) %in% list_na],
2,
median,
na.rm = TRUE)
df_impute_median < -data.frame(
sapply(
df,
function(x) ifelse(is.na(x),
mean(x, na.rm = TRUE),
x)))
print(df_impute_median)
df_impute_median < -data.frame(
sapply(
df,
function(x) ifelse(is.na(x),
mean(x, na.rm = TRUE),
x)))
df_impute_median <- data.frame(
sapply(
df,
function(x) ifelse(is.na(x),
mean(x, na.rm = TRUE),
x)))
View(df_impute_median)
df_impute_median <- data.frame(
sapply(
df,
function(x) ifelse(is.na(x),
median(x, na.rm = TRUE),
x)))
df_scale <- scale(df_impute_median)
wbPam <- pam(x=df_scale, k=8, keep.diss=TRUE, keep.data=TRUE)
View(wbPam)
gap_stat <- clusGap(df_scale,
FUN = pam,
K.max = 10,
B = 50)
fviz_gap_stat(gap_stat)
library(dplyr)
library(factoextra)
library(cluster)
df <- read.csv("G:\\Shared drives\\FY22 Regional Housing Initiative\\Data\\ACS5_2020\\acs5_2020_variables.csv", colClasses=c("GEOID"="character", "year"="character"), row.names="GEOID")
df <- select(df, -c(year, HH_TOT, POP_TOT, UNIT_MIS))
# Find missing values
list_na <- colnames(df)[apply(df, 2, anyNA)]
list_na
# Impute missing values
df_impute_median <- data.frame(
sapply(
df,
function(x) ifelse(is.na(x),
median(x, na.rm = TRUE),
x)))
print(df_impute_median)
# Scale dataframe
df_scale <- scale(df_impute_median)
wbPam <- pam(x=df_scale, k=8, keep.diss=TRUE, keep.data=TRUE)
gap_stat <- clusGap(df_scale,
FUN = pam,
K.max = 15,
B = 50)
fviz_gap_stat(gap_stat)
install.packages("factoextra")
setwd("~/GitHub/housing_initiative_submarkets/R")
library(dplyr)
install.packages("tidyLPA")
library(tidyLPA)
library(dplyr)
install.packages("Mplus")
acs2020 <- read.csv("G:\\Shared drives\\FY22 Regional Housing Initiative\\Data\\ACS5_2020\\acs5_2020_variables.csv", header = TRUE)
View(acs2020)
acs2020 <- read.csv("G:\\Shared drives\\FY22 Regional Housing Initiative\\Data\\ACS5_2020\\acs5_2020_variables.csv", row.names = 1, header = TRUE)
View(acs2020)
View(acs2020)
acs2020 <- read.csv("G:\\Shared drives\\FY22 Regional Housing Initiative\\Data\\ACS5_2020\\acs5_2020_variables.csv", row.names = 1, header = TRUE)
myVars <- c("HHINC_MED", "MED_HVAL", "RENT_MED", "TEN_RENT", "TEN_OWN", "VCY", "HHI_150P", "YB_59E", "YB_6099", "YB_00L", "UNIT_1", "UNIT_2to4", "UNIT_5P")
acs2020 <- acs2020[myVars]
View(acs2020)
m3 <- acs2020 %>%
estimate_profiles(8)
# install.packages("tidyLPA")
library(tidyLPA)
library(dplyr)
acs2020 <- read.csv("G:\\Shared drives\\FY22 Regional Housing Initiative\\Data\\ACS5_2020\\acs5_2020_variables.csv", row.names = 1, header = TRUE)
myVars <- c("HHINC_MED", "MED_HVAL", "RENT_MED", "TEN_RENT", "TEN_OWN", "VCY", "HHI_150P", "YB_59E", "YB_6099", "YB_00L", "UNIT_1", "UNIT_2to4", "UNIT_5P")
acs2020 <- acs2020[myVars]
# getting median of each column using apply()
all_column_median <- apply(acs2020, 2, median, na.rm=TRUE)
# imputing median value with NA
for(i in colnames(acs2020))
data[,i][is.na(acs2020[,i])] <- all_column_median[i]
acs2020
View(acs2020)
library(tidyLPA)
library(dplyr)
acs2020 <- read.csv("G:\\Shared drives\\FY22 Regional Housing Initiative\\Data\\ACS5_2020\\acs5_2020_variables.csv", row.names = 1, header = TRUE)
myVars <- c("HHINC_MED", "MED_HVAL", "RENT_MED", "TEN_RENT", "TEN_OWN", "VCY", "HHI_150P", "YB_59E", "YB_6099", "YB_00L", "UNIT_1", "UNIT_2to4", "UNIT_5P")
acs2020 <- acs2020[myVars]
# getting median of each column using apply()
all_column_median <- apply(acs2020, 2, median, na.rm=TRUE)
# imputing median value with NA
for(i in colnames(acs2020))
acs2020[,i][is.na(acs2020[,i])] <- all_column_median[i]
acs2020
View(acs2020)
library(tidyLPA)
library(dplyr)
acs2020 <- read.csv("G:\\Shared drives\\FY22 Regional Housing Initiative\\Data\\ACS5_2020\\acs5_2020_variables.csv", row.names = 1, header = TRUE)
myVars <- c("HHINC_MED", "MED_HVAL", "RENT_MED", "TEN_RENT", "TEN_OWN", "VCY", "HHI_150P", "YB_59E", "YB_6099", "YB_00L", "UNIT_1", "UNIT_2to4", "UNIT_5P")
acs2020 <- acs2020[myVars]
# getting median of each column using apply()
all_column_median <- apply(acs2020, 2, median, na.rm=TRUE)
# imputing median value with NA
for(i in colnames(acs2020))
acs2020[,i][is.na(acs2020[,i])] <- all_column_median[i]
acs2020
m3 <- acs2020 %>%
estimate_profiles(8)
get_estimates(m3)
View(m3)
View(acs2020)
# install.packages("tidyLPA")
library(tidyLPA)
library(dplyr)
acs2020 <- read.csv("G:\\Shared drives\\FY22 Regional Housing Initiative\\Data\\ACS5_2020\\acs5_2020_variables.csv", row.names = 1, header = TRUE)
myVars <- c("HHINC_MED", "MED_HVAL", "RENT_MED", "TEN_RENT", "TEN_OWN", "VCY", "HHI_150P", "YB_59E", "YB_6099", "YB_00L", "UNIT_1", "UNIT_2to4", "UNIT_5P")
acs2020 <- acs2020[myVars]
# getting median of each column using apply()
all_column_median <- apply(acs2020, 2, median, na.rm=TRUE)
# imputing median value with NA
for(i in colnames(acs2020))
acs2020[,i][is.na(acs2020[,i])] <- all_column_median[i]
acs2020
m3 <- acs2020 %>%
estimate_profiles(8)
export <- get_data(m3)
View(export)
# install.packages("tidyLPA")
library(tidyLPA)
library(dplyr)
acs2020 <- read.csv("G:\\Shared drives\\FY22 Regional Housing Initiative\\Data\\ACS5_2020\\acs5_2020_variables.csv", row.names = 1, header = TRUE)
myVars <- c("HHINC_MED", "MED_HVAL", "RENT_MED", "TEN_RENT", "TEN_OWN", "VCY", "HHI_150P", "YB_59E", "YB_6099", "YB_00L", "UNIT_1", "UNIT_2to4", "UNIT_5P")
acs2020 <- acs2020[myVars]
# getting median of each column using apply()
all_column_median <- apply(acs2020, 2, median, na.rm=TRUE)
# imputing median value with NA
for(i in colnames(acs2020))
acs2020[,i][is.na(acs2020[,i])] <- all_column_median[i]
acs2020
m3 <- acs2020 %>%
estimate_profiles(8)
export_1 <- get_data(m3)
write.csv(export_1, "C:\\Users\\bcarney\\Desktop\\lpa_testing\\export_1.csv")
# install.packages("tidyLPA")
library(tidyLPA)
library(dplyr)
acs2020 <- read.csv("G:\\Shared drives\\FY22 Regional Housing Initiative\\Data\\ACS5_2020\\acs5_2020_variables.csv", row.names = 1, header = TRUE)
myVars <- c("HHINC_MED", "MED_HVAL", "RENT_MED", "TEN_RENT", "TEN_OWN", "VCY", "HHI_150P", "YB_59E", "YB_6099", "YB_00L", "UNIT_1", "UNIT_2to4", "UNIT_5P")
acs2020 <- acs2020[myVars]
# getting median of each column using apply()
all_column_median <- apply(acs2020, 2, median, na.rm=TRUE)
# imputing median value with NA
for(i in colnames(acs2020))
acs2020[,i][is.na(acs2020[,i])] <- all_column_median[i]
acs2020
# Export 1
m3 <- acs2020 %>%
estimate_profiles(8)
export_1 <- get_data(m3)
write.csv(export_1, "C:\\Users\\bcarney\\Desktop\\lpa_testing\\export_1.csv")
# Export 2
m4 <- acs2020 %>%
estimate_profiles(8)
export_2 <- get_data(m4)
write.csv(export_2, "C:\\Users\\bcarney\\Desktop\\lpa_testing\\export_2.csv")
View(export_1)
tracts <- acs2020.index
tracts <- row.names(acs2020)
# install.packages("tidyLPA")
library(tidyLPA)
library(dplyr)
acs2020 <- read.csv("G:\\Shared drives\\FY22 Regional Housing Initiative\\Data\\ACS5_2020\\acs5_2020_variables.csv", row.names = 1, header = TRUE)
myVars <- c("HHINC_MED", "MED_HVAL", "RENT_MED", "TEN_RENT", "TEN_OWN", "VCY", "HHI_150P", "YB_59E", "YB_6099", "YB_00L", "UNIT_1", "UNIT_2to4", "UNIT_5P")
acs2020 <- acs2020[myVars]
tracts <- row.names(acs2020)
# getting median of each column using apply()
all_column_median <- apply(acs2020, 2, median, na.rm=TRUE)
# imputing median value with NA
for(i in colnames(acs2020))
acs2020[,i][is.na(acs2020[,i])] <- all_column_median[i]
acs2020
# Export 1
m3 <- acs2020 %>%
estimate_profiles(8)
export_1 <- get_data(m3)
# Append index
rownames(export_1) <- row.names(acs2020)
write.csv(export_1, "C:\\Users\\bcarney\\Desktop\\lpa_testing\\export_1.csv")
# Export 2
m4 <- acs2020 %>%
estimate_profiles(8)
export_2 <- get_data(m4)
write.csv(export_2, "C:\\Users\\bcarney\\Desktop\\lpa_testing\\export_2.csv")
View(export_1)
View(export_1)
View(export_1)
myVars2 <- c("HHINC_MED", "MED_HVAL", "RENT_MED", "TEN_RENT", "TEN_OWN", "VCY", "HHI_150P", "YB_59E", "YB_6099", "YB_00L", "UNIT_1", "UNIT_2to4", "UNIT_5P", "class")
reduced_df <- export_1[myVars2]
myVars2 <- c("HHINC_MED", "MED_HVAL", "RENT_MED", "TEN_RENT", "TEN_OWN", "VCY", "HHI_150P", "YB_59E", "YB_6099", "YB_00L", "UNIT_1", "UNIT_2to4", "UNIT_5P", "Class")
reduced_df <- export_1[myVars2]
View(reduced_df)
grouped_df <- reduced_df %>%
group_by(Class) %>%
summarize(median)
grouped_df <- reduced_df %>%
group_by("Class") %>%
summarize(median)
View(reduced_df)
grouped_df <- reduced_df %>%
group_by(Class)
View(grouped_df)
grouped_df <- reduced_df %>%
group_by(Class) %>%
summarize(median = median())
grouped_df <- reduced_df %>%
group_by(Class) %>%
summarize(disp = median(disp))
install.packages("magrittr")
install.packages("magrittr")
library(magrittr)
grouped_df <- reduced_df %>%
group_by(Class) %>%
summarize(disp = median(disp))
grouped_df <- reduced_df %>%
group_by(Class) %>%
summarise(disp = median(disp))
grouped_df <- reduced_df %>%
group_by(Class)
library(dplyr)
grouped_df <- reduced_df %>%
group_by(Class) %>%
summarize(disp = median(disp))
grouped_df <- reduced_df %>%
group_by(Class) %>%
summarize(median = median(disp))
View(grouped_df)
grouped_df <- reduced_df %>%
aggregate(Class, FUN = "median")
grouped_df <- reduced_df %>%
aggregate("Class", FUN = "median")
grouped_df <- reduced_df %>%
aggregate(by = "Class", FUN = "median")
grouped_df <- reduced_df %>%
aggregate(by = list(Class), FUN = "median")
grouped_df <- reduced_df %>%
aggregate(by = list("Class"), FUN = "median")
grouped_df <- aggregate(reduced_df, by = list(reduced_df$Class), FUN = "median")
View(grouped_df)
View(grouped_df)
