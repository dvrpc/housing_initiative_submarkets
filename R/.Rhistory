View(joined_df_clean)
joined_df_medians <- apply(joined_df, 2, median)
print(joined_df_medians)
View(joined_df_clean)
joined_df_clean_medians <- joined_df_clean %>%
rowwise() %>%
mutate(min=min(myVars), median = median(c(myVars)))
View(joined_df_clean_medians)
joined_df_clean_medians <- joined_df_clean %>%
apply(., 2, median)
print(joined_df_clean_medians)
joined_df_clean_medians <- joined_df_clean %>%
apply(., 2, median) %>%
cbind(joined_df_clean)
setwd("G:\\Shared drives\\FY22 Regional Housing Initiative\\SubmarketAnalysis\\SubmarketClustering")
# Load packages
library(tidyverse)
library(dplyr)
library(rgdal)
library(tidycensus)
library(censusapi)
#Load Census API key
census_api_key("e6cd8f90ccb0acacdfa5373911a2e73b96dbd792", install=TRUE, overwrite=TRUE)
readRenviron("~/.Renviron")
fips_region <- c("34005", "34007", "34015", "34021", "42017", "42029", "42045", "42091", "42101")
#Variable List - For Reference
acs5_varlist_2019 <- load_variables(year = 2019,
dataset = "acs5",
cache = TRUE)
acs5_varlist_2020 <- load_variables(year = 2020,
dataset = "acs5",
cache = TRUE)
# ---- Define Variables ----
acs5_20_vars_tot <- c(
### POPULATION AND UNITS ###
# Total Population (Total Population)
POP_TOT = "B01003_001",
# Total Households
HH_TOT = "B11001_001",
# Median Household Income
HHINC_MED = "B19013_001",
# Household Income Tiers,
HHI_U10 = "B19001_002",
HHI_1015 = "B19001_003",
HHI_1520 = "B19001_004",
HHI_2025 = "B19001_005",
HHI_2530 = "B19001_006",
HHI_3035 = "B19001_007",
HHI_3540 = "B19001_008",
HHI_4045 = "B19001_009",
HHI_4550 = "B19001_010",
HHI_5060 = "B19001_011",
HHI_6075 = "B19001_012",
HHI_75100 = "B19001_013",
HHI_100125 = "B19001_014",
HHI_125150 = "B19001_015",
HHI_150200 = "B19001_016",
HHI_200P = "B19001_017",
# Occupancy Status (Housing Units)
UNITS_TOT = "B25002_001",
UNITS_OCC = "B25002_002",
UNITS_VAC = "B25002_003",
# Tenure (Occupied Housing Units)
TEN_TOT = "B25003_001",
TEN_O = "B25003_002",
TEN_R = "B25003_003",
### HOUSING STOCK ###
# Units in Structure (Occupied Housing Units)
UNITS_STR = "B25024_001",
UNIT_1DET = "B25024_002",
UNIT_1ATT = "B25024_003",
UNIT_2 = "B25024_004",
UNIT_3or4 = "B25024_005",
UNIT_5to9 = "B25024_006",
UNIT_1019 = "B25024_007",
UNIT_2049 = "B25024_008",
UNIT_50P = "B25024_009",
UNIT_MOB = "B25024_010",
UNIT_OTH = "B25024_011",
# Units in Structure (by Tenure)
# Note: Must tabulate by tenure IOT return occupied (not total) housing units
O_1DET = "B25032_003",
O_1ATT = "B25032_004",
O_2 = "B25032_005",
O_3to4 = "B25032_006",
O_5to9 = "B25032_007",
O_10to19 = "B25032_008",
O_20to49 = "B25032_009",
O_50more = "B25032_010",
R_1DET = "B25032_014",
R_1ATT = "B25032_015",
R_2 = "B25032_016",
R_3to4 = "B25032_017",
R_5to9 = "B25032_018",
R_10to19 = "B25032_019",
R_20to49 = "B25032_020",
R_50more = "B25032_021",
# Bedrooms (Occupied Housing Units)
BED_OWN_0 = "B25042_003",
BED_OWN_1 = "B25042_004",
BED_OWN_2 = "B25042_005",
BED_OWN_3 = "B25042_006",
BED_OWN_4 = "B25042_007",
BED_OWN_5more = "B25042_008",
BED_RENT_0 = "B25042_010",
BED_RENT_1 = "B25042_011",
BED_RENT_2 = "B25042_012",
BED_RENT_3 = "B25042_013",
BED_RENT_4 = "B25042_014",
BED_RENT_5more = "B25042_015",
# Year Built
YB_MED = "B25035_001",
YB_14L = "B25034_002",
YB_10to13 = "B25034_003",
YB_00to09 = "B25034_004",
YB_90to99 = "B25034_005",
YB_80to89 = "B25034_006",
YB_70to79 = "B25034_007",
YB_60to69 = "B25034_008",
YB_50to59 = "B25034_009",
YB_40to49 = "B25034_010",
YB_39E = "B25034_011",
### HOUSING MARKET ###
# Median Gross Rent (Renter-Occupied Housing Units Paying Cash Rent)
RENT_MED = "B25064_001",
# Gross Rent as a Percentage of Household Income (Renter-Occupied Housing Units)
RPI_00to09 = "B25070_002",
RPI_10to14 = "B25070_003",
RPI_15to19 = "B25070_004",
RPI_20to24 = "B25070_005",
RPI_25to29 = "B25070_006",
RPI_30to34 = "B25070_007",
RPI_35to39 = "B25070_008",
RPI_40to49 = "B25070_009",
RPI_50more = "B25070_010",
RPI_NA = "B25070_011",
# Median Selected Monthly Owner Costs (Owner-Occupied Housing Units)
COST_OWN_MED = "B25088_001",
# Selected Monthly Owner Costs by Mortgage Status (Owner-Occupied Housing Units)
OPI_00to09 = "B25091_003",
OPI_10to14 = "B25091_004",
OPI_15to19 = "B25091_005",
OPI_20to24 = "B25091_006",
OPI_25to29 = "B25091_007",
OPI_30to34 = "B25091_008",
OPI_35to39 = "B25091_009",
OPI_40to49 = "B25091_010",
OPI_50more = "B25091_011",
OPI_NA = "B25091_012",
# Median Monthly Housing Costs (Occupied Housing Units with Monthly Housing Costs)
COST_MED = "B25105_001",
# Value by Quartile (Owner-Occupied Housing Units)
OVAL_Q1 = "B25076_001",
MED_HVAL = "B25077_001",
OVAL_Q3 = "B25078_001")
dvrpc_states <- c(34, 42)
dvrpc_fips <- c('34005|34007|34015|34021|42017|42029|42045|42091|42101')
raw_data <- get_acs(geography = "tract",
variables = acs5_20_vars_tot,
year = 2020,
state = dvrpc_states,
survey = "acs5",
output = "wide"
) %>%
mutate(year = 2020) %>%
filter(str_detect(GEOID, dvrpc_fips)) %>%
select(GEOID, year, ends_with("E"), -NAME)%>%
`colnames<-`(str_replace(colnames(.),"E$",""))
dvrpc_dataset_20 <- raw_data%>%
mutate(TEN_RENT = round(100*(TEN_R/TEN_TOT),1))%>%
mutate(TEN_OWN = round(100*(TEN_O/TEN_TOT),1))%>%
mutate(HHI_U35 = round(100*((HHI_U10+HHI_1015 + HHI_1520 + HHI_2025 + HHI_2530 + HHI_3035)/HH_TOT),1))%>%
mutate(HHI_3575 = round(100*((HHI_3540 +HHI_4045 +HHI_4550 + HHI_5060 + HHI_6075)/HH_TOT),1))%>%
mutate(HHI_75100 = round(100*(HHI_75100/HH_TOT),1))%>%
mutate(HHI_100P = round(100*((HHI_100125 + HHI_125150 + HHI_150200 + HHI_200P)/HH_TOT),1))%>%
mutate(HHI_150P = round(100*((HHI_150200 + HHI_200P)/HH_TOT),1))%>%
mutate(VCY = round(100*(UNITS_VAC/UNITS_TOT),1))%>%
mutate(THREE_BR = round(100*((BED_OWN_3 + BED_OWN_4 + BED_OWN_5more + BED_RENT_3 + BED_RENT_4 + BED_RENT_5more)/UNITS_OCC), 1))%>%
mutate(YB_59E = round(100*((YB_39E + YB_40to49 + YB_50to59)/UNITS_TOT), 1))%>%
mutate(YB_6099 = round(100*((YB_60to69 + YB_70to79 + YB_80to89 + YB_90to99)/UNITS_TOT), 1))%>%
mutate(YB_00L = round(100*((YB_00to09 + YB_10to13 + YB_14L)/UNITS_TOT), 1))%>%
mutate(UNIT_1 = round(100*((UNIT_1DET + UNIT_1ATT)/UNITS_STR), 1))%>%
mutate(UNIT_2to4 = round(100*((UNIT_2 + UNIT_3or4)/UNITS_STR), 1))%>%
mutate(UNIT_5P = round(100*((UNIT_5to9 + UNIT_1019 + UNIT_2049 + UNIT_50P)/UNITS_STR), 1))%>%
select(GEOID, UNITS_TOT, POP_TOT, HH_TOT, HHINC_MED, RENT_MED, TEN_RENT, TEN_OWN, VCY, HHI_U35, HHI_3575, HHI_75100, HHI_100P, HHI_150P, THREE_BR, YB_59E, YB_6099, YB_00L, UNIT_1, UNIT_2to4, UNIT_5P)
View(dvrpc_dataset_20)
View(dvrpc_dataset_20)
hu_density <- read.csv("U:\\FY2022\\Planning\\RegionalHousingInitiative\\SubmarketAnalysis\\data\\housing_unit_density.csv")
View(hu_density)
hu_density <- read.csv("U:\\FY2022\\Planning\\RegionalHousingInitiative\\SubmarketAnalysis\\data\\housing_unit_density.csv", colClasses = c("GEOID"="character"))
View(hu_density)
hu_density <- read.csv("U:\\FY2022\\Planning\\RegionalHousingInitiative\\SubmarketAnalysis\\data\\housing_unit_density.csv", colClasses = c("geoid"="character"))
View(hu_density)
View(raw_data)
raw_data_joined <- merge(raw_data, hu_density, by.x="GEOID", by.y="geoid")
View(raw_data_joined)
View(acs5_varlist_2020)
# ---- Define Variables ----
acs5_20_vars_tot <- c(
### POPULATION AND UNITS ###
# Total Population (Total Population)
POP_TOT = "B01003_001",
# Total Households
HH_TOT = "B11001_001",
# Median Household Income
HHINC_MED = "B19013_001",
# Household Income Tiers,
HHI_U10 = "B19001_002",
HHI_1015 = "B19001_003",
HHI_1520 = "B19001_004",
HHI_2025 = "B19001_005",
HHI_2530 = "B19001_006",
HHI_3035 = "B19001_007",
HHI_3540 = "B19001_008",
HHI_4045 = "B19001_009",
HHI_4550 = "B19001_010",
HHI_5060 = "B19001_011",
HHI_6075 = "B19001_012",
HHI_75100 = "B19001_013",
HHI_100125 = "B19001_014",
HHI_125150 = "B19001_015",
HHI_150200 = "B19001_016",
HHI_200P = "B19001_017",
# Occupancy Status (Housing Units)
UNITS_TOT = "B25002_001",
UNITS_OCC = "B25002_002",
UNITS_VAC = "B25002_003",
# Tenure (Occupied Housing Units)
TEN_TOT = "B25003_001",
TEN_O = "B25003_002",
TEN_R = "B25003_003",
### HOUSING STOCK ###
# Units in Structure (Occupied Housing Units)
UNITS_STR = "B25024_001",
UNIT_1DET = "B25024_002",
UNIT_1ATT = "B25024_003",
UNIT_2 = "B25024_004",
UNIT_3or4 = "B25024_005",
UNIT_5to9 = "B25024_006",
UNIT_1019 = "B25024_007",
UNIT_2049 = "B25024_008",
UNIT_50P = "B25024_009",
UNIT_MOB = "B25024_010",
UNIT_OTH = "B25024_011",
# Units in Structure (by Tenure)
# Note: Must tabulate by tenure IOT return occupied (not total) housing units
O_1DET = "B25032_003",
O_1ATT = "B25032_004",
O_2 = "B25032_005",
O_3to4 = "B25032_006",
O_5to9 = "B25032_007",
O_10to19 = "B25032_008",
O_20to49 = "B25032_009",
O_50more = "B25032_010",
R_1DET = "B25032_014",
R_1ATT = "B25032_015",
R_2 = "B25032_016",
R_3to4 = "B25032_017",
R_5to9 = "B25032_018",
R_10to19 = "B25032_019",
R_20to49 = "B25032_020",
R_50more = "B25032_021",
# Bedrooms (Occupied Housing Units)
BED_OWN_0 = "B25042_003",
BED_OWN_1 = "B25042_004",
BED_OWN_2 = "B25042_005",
BED_OWN_3 = "B25042_006",
BED_OWN_4 = "B25042_007",
BED_OWN_5more = "B25042_008",
BED_RENT_0 = "B25042_010",
BED_RENT_1 = "B25042_011",
BED_RENT_2 = "B25042_012",
BED_RENT_3 = "B25042_013",
BED_RENT_4 = "B25042_014",
BED_RENT_5more = "B25042_015",
# Year Built
YB_MED = "B25035_001",
YB_14L = "B25034_002",
YB_10to13 = "B25034_003",
YB_00to09 = "B25034_004",
YB_90to99 = "B25034_005",
YB_80to89 = "B25034_006",
YB_70to79 = "B25034_007",
YB_60to69 = "B25034_008",
YB_50to59 = "B25034_009",
YB_40to49 = "B25034_010",
YB_39E = "B25034_011",
### HOUSING MARKET ###
# Median Gross Rent (Renter-Occupied Housing Units Paying Cash Rent)
RENT_MED = "B25064_001",
# Gross Rent as a Percentage of Household Income (Renter-Occupied Housing Units)
RPI_00to09 = "B25070_002",
RPI_10to14 = "B25070_003",
RPI_15to19 = "B25070_004",
RPI_20to24 = "B25070_005",
RPI_25to29 = "B25070_006",
RPI_30to34 = "B25070_007",
RPI_35to39 = "B25070_008",
RPI_40to49 = "B25070_009",
RPI_50more = "B25070_010",
RPI_NA = "B25070_011",
# Median Selected Monthly Owner Costs (Owner-Occupied Housing Units)
COST_OWN_MED = "B25088_001",
# Selected Monthly Owner Costs by Mortgage Status (Owner-Occupied Housing Units)
OPI_00to09 = "B25091_003",
OPI_10to14 = "B25091_004",
OPI_15to19 = "B25091_005",
OPI_20to24 = "B25091_006",
OPI_25to29 = "B25091_007",
OPI_30to34 = "B25091_008",
OPI_35to39 = "B25091_009",
OPI_40to49 = "B25091_010",
OPI_50more = "B25091_011",
OPI_NA = "B25091_012",
# Median Monthly Housing Costs (Occupied Housing Units with Monthly Housing Costs)
COST_MED = "B25105_001",
# Value by Quartile (Owner-Occupied Housing Units)
OVAL_Q1 = "B25076_001",
MED_HVAL = "B25077_001",
OVAL_Q3 = "B25078_001",
# Tenure by HH Size
TOT_HHSize = "B25009_001",
HHS_1O = "B25009_003",
HHS_1R = "B25009_011",
HHS_2O = "B25009_004",
HHS_3O = "B25009_005",
HHS_4O = "B25009_006",
HHS_2R = "B25009_012",
HHS_3R = "B25009_013",
HHS_4R = "B25009_014",
HHS_5O = "B25009_007",
HHS_6O = "B25009_008",
HHS_7O = "B25009_009",
HHS_5R = "B25009_015",
HHS_6R = "B25009_016",
HHS_7R = "B25009_017"
)
# Join with Raw Data
raw_data_joined <- merge(raw_data, hu_density, by.x="GEOID", by.y="geoid")
dvrpc_dataset_20 <- raw_data%>%
mutate(TEN_RENT = round(100*(TEN_R/TEN_TOT),1))%>%
mutate(TEN_OWN = round(100*(TEN_O/TEN_TOT),1))%>%
mutate(HHI_U35 = round(100*((HHI_U10+HHI_1015 + HHI_1520 + HHI_2025 + HHI_2530 + HHI_3035)/HH_TOT),1))%>%
mutate(HHI_3575 = round(100*((HHI_3540 +HHI_4045 +HHI_4550 + HHI_5060 + HHI_6075)/HH_TOT),1))%>%
mutate(HHI_75100 = round(100*(HHI_75100/HH_TOT),1))%>%
mutate(HHI_100P = round(100*((HHI_100125 + HHI_125150 + HHI_150200 + HHI_200P)/HH_TOT),1))%>%
mutate(HHI_150P = round(100*((HHI_150200 + HHI_200P)/HH_TOT),1))%>%
mutate(VCY = round(100*(UNITS_VAC/UNITS_TOT),1))%>%
mutate(THREE_BR = round(100*((BED_OWN_3 + BED_OWN_4 + BED_OWN_5more + BED_RENT_3 + BED_RENT_4 + BED_RENT_5more)/UNITS_OCC), 1))%>%
mutate(YB_59E = round(100*((YB_39E + YB_40to49 + YB_50to59)/UNITS_TOT), 1))%>%
mutate(YB_6099 = round(100*((YB_60to69 + YB_70to79 + YB_80to89 + YB_90to99)/UNITS_TOT), 1))%>%
mutate(YB_00L = round(100*((YB_00to09 + YB_10to13 + YB_14L)/UNITS_TOT), 1))%>%
mutate(UNIT_1 = round(100*((UNIT_1DET + UNIT_1ATT)/UNITS_STR), 1))%>%
mutate(UNIT_2to4 = round(100*((UNIT_2 + UNIT_3or4)/UNITS_STR), 1))%>%
mutate(UNIT_5P = round(100*((UNIT_5to9 + UNIT_1019 + UNIT_2049 + UNIT_50P)/UNITS_STR), 1))%>%
mutate(HHS_1 = round(100*((HHS_1R + HHS_1O)/TOT_HHSize), 1)) %>%
mutate(HHS_2to4 = round(100*((HHS_2R + HHS_3R + HHS_4R + HHS_2O + HHS_3O + HHS_4O)/TOT_HHSize), 1)) %>%
mutate(HHS_5P = round(100*((HHS_5R + HHS_6R + HHS_7R + HHS_5O + HHS_6O + HHS_7O)/TOT_HHSize), 1)) %>%
select(GEOID, UNITS_TOT, POP_TOT, HH_TOT, HHINC_MED, RENT_MED, TEN_RENT, TEN_OWN, VCY, HHI_U35, HHI_3575, HHI_75100, HHI_100P, HHI_150P, THREE_BR, YB_59E, YB_6099, YB_00L, UNIT_1, UNIT_2to4, UNIT_5P, HHS_1, HHS_2to4, HHS_5P)
raw_data <- get_acs(geography = "tract",
variables = acs5_20_vars_tot,
year = 2020,
state = dvrpc_states,
survey = "acs5",
output = "wide"
) %>%
mutate(year = 2020) %>%
filter(str_detect(GEOID, dvrpc_fips)) %>%
select(GEOID, year, ends_with("E"), -NAME)%>%
`colnames<-`(str_replace(colnames(.),"E$",""))
# Import Housing Unit Density File
hu_density <- read.csv("U:\\FY2022\\Planning\\RegionalHousingInitiative\\SubmarketAnalysis\\data\\housing_unit_density.csv", colClasses = c("geoid"="character"))
# Join with Raw Data
raw_data_joined <- merge(raw_data, hu_density, by.x="GEOID", by.y="geoid")
dvrpc_dataset_20 <- raw_data%>%
mutate(TEN_RENT = round(100*(TEN_R/TEN_TOT),1))%>%
mutate(TEN_OWN = round(100*(TEN_O/TEN_TOT),1))%>%
mutate(HHI_U35 = round(100*((HHI_U10+HHI_1015 + HHI_1520 + HHI_2025 + HHI_2530 + HHI_3035)/HH_TOT),1))%>%
mutate(HHI_3575 = round(100*((HHI_3540 +HHI_4045 +HHI_4550 + HHI_5060 + HHI_6075)/HH_TOT),1))%>%
mutate(HHI_75100 = round(100*(HHI_75100/HH_TOT),1))%>%
mutate(HHI_100P = round(100*((HHI_100125 + HHI_125150 + HHI_150200 + HHI_200P)/HH_TOT),1))%>%
mutate(HHI_150P = round(100*((HHI_150200 + HHI_200P)/HH_TOT),1))%>%
mutate(VCY = round(100*(UNITS_VAC/UNITS_TOT),1))%>%
mutate(THREE_BR = round(100*((BED_OWN_3 + BED_OWN_4 + BED_OWN_5more + BED_RENT_3 + BED_RENT_4 + BED_RENT_5more)/UNITS_OCC), 1))%>%
mutate(YB_59E = round(100*((YB_39E + YB_40to49 + YB_50to59)/UNITS_TOT), 1))%>%
mutate(YB_6099 = round(100*((YB_60to69 + YB_70to79 + YB_80to89 + YB_90to99)/UNITS_TOT), 1))%>%
mutate(YB_00L = round(100*((YB_00to09 + YB_10to13 + YB_14L)/UNITS_TOT), 1))%>%
mutate(UNIT_1 = round(100*((UNIT_1DET + UNIT_1ATT)/UNITS_STR), 1))%>%
mutate(UNIT_2to4 = round(100*((UNIT_2 + UNIT_3or4)/UNITS_STR), 1))%>%
mutate(UNIT_5P = round(100*((UNIT_5to9 + UNIT_1019 + UNIT_2049 + UNIT_50P)/UNITS_STR), 1))%>%
mutate(HHS_1 = round(100*((HHS_1R + HHS_1O)/TOT_HHSize), 1)) %>%
mutate(HHS_2to4 = round(100*((HHS_2R + HHS_3R + HHS_4R + HHS_2O + HHS_3O + HHS_4O)/TOT_HHSize), 1)) %>%
mutate(HHS_5P = round(100*((HHS_5R + HHS_6R + HHS_7R + HHS_5O + HHS_6O + HHS_7O)/TOT_HHSize), 1)) %>%
select(GEOID, UNITS_TOT, POP_TOT, HH_TOT, HHINC_MED, RENT_MED, TEN_RENT, TEN_OWN, VCY, HHI_U35, HHI_3575, HHI_75100, HHI_100P, HHI_150P, THREE_BR, YB_59E, YB_6099, YB_00L, UNIT_1, UNIT_2to4, UNIT_5P, HHS_1, HHS_2to4, HHS_5P)
View(dvrpc_dataset_20)
dvrpc_dataset_20 <- raw_data%>%
mutate(TEN_RENT = round(100*(TEN_R/TEN_TOT),1))%>%
mutate(TEN_OWN = round(100*(TEN_O/TEN_TOT),1))%>%
mutate(HHI_U35 = round(100*((HHI_U10+HHI_1015 + HHI_1520 + HHI_2025 + HHI_2530 + HHI_3035)/HH_TOT),1))%>%
mutate(HHI_3575 = round(100*((HHI_3540 +HHI_4045 +HHI_4550 + HHI_5060 + HHI_6075)/HH_TOT),1))%>%
mutate(HHI_75100 = round(100*(HHI_75100/HH_TOT),1))%>%
mutate(HHI_100P = round(100*((HHI_100125 + HHI_125150 + HHI_150200 + HHI_200P)/HH_TOT),1))%>%
mutate(HHI_150P = round(100*((HHI_150200 + HHI_200P)/HH_TOT),1))%>%
mutate(VCY = round(100*(UNITS_VAC/UNITS_TOT),1))%>%
mutate(THREE_BR = round(100*((BED_OWN_3 + BED_OWN_4 + BED_OWN_5more + BED_RENT_3 + BED_RENT_4 + BED_RENT_5more)/UNITS_OCC), 1))%>%
mutate(YB_59E = round(100*((YB_39E + YB_40to49 + YB_50to59)/UNITS_TOT), 1))%>%
mutate(YB_6099 = round(100*((YB_60to69 + YB_70to79 + YB_80to89 + YB_90to99)/UNITS_TOT), 1))%>%
mutate(YB_00L = round(100*((YB_00to09 + YB_10to13 + YB_14L)/UNITS_TOT), 1))%>%
mutate(UNIT_1 = round(100*((UNIT_1DET + UNIT_1ATT)/UNITS_STR), 1))%>%
mutate(UNIT_2to4 = round(100*((UNIT_2 + UNIT_3or4)/UNITS_STR), 1))%>%
mutate(UNIT_5P = round(100*((UNIT_5to9 + UNIT_1019 + UNIT_2049 + UNIT_50P)/UNITS_STR), 1))%>%
mutate(HHS_1 = round(100*((HHS_1R + HHS_1O)/TOT_HHSize), 1)) %>%
mutate(HHS_2to4 = round(100*((HHS_2R + HHS_3R + HHS_4R + HHS_2O + HHS_3O + HHS_4O)/TOT_HHSize), 1)) %>%
mutate(HHS_5P = round(100*((HHS_5R + HHS_6R + HHS_7R + HHS_5O + HHS_6O + HHS_7O)/TOT_HHSize), 1)) %>%
select(GEOID, UNITS_TOT, POP_TOT, HH_TOT, HHINC_MED, RENT_MED, TEN_RENT, TEN_OWN, VCY, HHI_U35, HHI_3575, HHI_75100, HHI_100P, HHI_150P, THREE_BR, YB_59E, YB_6099, YB_00L, UNIT_1, UNIT_2to4, UNIT_5P, HHS_1, HHS_2to4, HHS_5P, hu_acre)
View(hu_density)
# Join with Raw Data
raw_data_joined <- merge(raw_data, hu_density, by.x="GEOID", by.y="geoid")
dvrpc_dataset_20 <- raw_data_joined%>%
mutate(TEN_RENT = round(100*(TEN_R/TEN_TOT),1))%>%
mutate(TEN_OWN = round(100*(TEN_O/TEN_TOT),1))%>%
mutate(HHI_U35 = round(100*((HHI_U10+HHI_1015 + HHI_1520 + HHI_2025 + HHI_2530 + HHI_3035)/HH_TOT),1))%>%
mutate(HHI_3575 = round(100*((HHI_3540 +HHI_4045 +HHI_4550 + HHI_5060 + HHI_6075)/HH_TOT),1))%>%
mutate(HHI_75100 = round(100*(HHI_75100/HH_TOT),1))%>%
mutate(HHI_100P = round(100*((HHI_100125 + HHI_125150 + HHI_150200 + HHI_200P)/HH_TOT),1))%>%
mutate(HHI_150P = round(100*((HHI_150200 + HHI_200P)/HH_TOT),1))%>%
mutate(VCY = round(100*(UNITS_VAC/UNITS_TOT),1))%>%
mutate(THREE_BR = round(100*((BED_OWN_3 + BED_OWN_4 + BED_OWN_5more + BED_RENT_3 + BED_RENT_4 + BED_RENT_5more)/UNITS_OCC), 1))%>%
mutate(YB_59E = round(100*((YB_39E + YB_40to49 + YB_50to59)/UNITS_TOT), 1))%>%
mutate(YB_6099 = round(100*((YB_60to69 + YB_70to79 + YB_80to89 + YB_90to99)/UNITS_TOT), 1))%>%
mutate(YB_00L = round(100*((YB_00to09 + YB_10to13 + YB_14L)/UNITS_TOT), 1))%>%
mutate(UNIT_1 = round(100*((UNIT_1DET + UNIT_1ATT)/UNITS_STR), 1))%>%
mutate(UNIT_2to4 = round(100*((UNIT_2 + UNIT_3or4)/UNITS_STR), 1))%>%
mutate(UNIT_5P = round(100*((UNIT_5to9 + UNIT_1019 + UNIT_2049 + UNIT_50P)/UNITS_STR), 1))%>%
mutate(HHS_1 = round(100*((HHS_1R + HHS_1O)/TOT_HHSize), 1)) %>%
mutate(HHS_2to4 = round(100*((HHS_2R + HHS_3R + HHS_4R + HHS_2O + HHS_3O + HHS_4O)/TOT_HHSize), 1)) %>%
mutate(HHS_5P = round(100*((HHS_5R + HHS_6R + HHS_7R + HHS_5O + HHS_6O + HHS_7O)/TOT_HHSize), 1)) %>%
select(GEOID, UNITS_TOT, POP_TOT, HH_TOT, HHINC_MED, RENT_MED, TEN_RENT, TEN_OWN, VCY, HHI_U35, HHI_3575, HHI_75100, HHI_100P, HHI_150P, THREE_BR, YB_59E, YB_6099, YB_00L, UNIT_1, UNIT_2to4, UNIT_5P, HHS_1, HHS_2to4, HHS_5P, hu_acre)
View(dvrpc_dataset_20)
write.csv(dvrpc_dataset_20, "U:\\FY2022\\Planning\\RegionalHousingInitiative\\SubmarketAnalysis\\data\\acs5_2020_variables.csv", row.names = FALSE)
# Last updated: 10/12/2022
# Purpose: This script runs a Latent Profile Analysis clustering algorithm on data inputs used for the Regional Housing Initiative submarkets.
# Set working directory
setwd("C:\\Users\\bcarney\\Documents\\GitHub\\housing_initiative_submarkets\\R")
# Install Packages
# install.packages("tidyLPA")
# install.packages("magrittr")
# install.packages("matrixStats")
# install.packages("textshape")
# install.packages("tidyr")
# Import libraries
library(tidyLPA)
library(dplyr)
library(magrittr)
library(matrixStats)
library(textshape)
library(tidyr)
# Import data
acs2020_raw <- read.csv("U:\\FY2022\\Planning\\RegionalHousingInitiative\\SubmarketAnalysis\\data\\acs5_2020_variables.csv", colClasses = c("GEOID"="character"))
mediansaleprice_subsidizedhousing <- read.csv("U:\\FY2022\\Planning\\RegionalHousingInitiative\\SubmarketAnalysis\\data\\region_tracts_mediansaleprice_subsidizedhousingunits.csv", colClasses = c("geoid"="character")) %>%
rename(subsidizedunits = region_subsidizedhousing_unitsbytract_Total.Subsidized.Units) %>%
mutate(subsidizedunits = ifelse(is.na(subsidizedunits), 0, subsidizedunits))
# Join dataframes
joined_df <- merge(acs2020_raw, mediansaleprice_subsidizedhousing, by.x="GEOID", by.y="geoid") %>%
drop_na(med16, med21) %>%
filter(HH_TOT > 0) %>%
mutate(pct_subsidized = round((subsidizedunits/UNITS_TOT) * 100, 2)) %>%
column_to_rownames(., "GEOID")
myVars <- c("HHINC_MED", "RENT_MED", "TEN_RENT", "TEN_OWN", "VCY", "HHI_150P", "YB_59E", "YB_6099", "YB_00L", "UNIT_1", "UNIT_2to4", "UNIT_5P", "pct_subsidized", "med21", "pct_diff", "HHS_1", "HHS_2to4", "HHS_5P", "hu_acre")
myVars_Class <- c("HHINC_MED", "RENT_MED", "TEN_RENT", "TEN_OWN", "VCY", "HHI_150P", "YB_59E", "YB_6099", "YB_00L", "UNIT_1", "UNIT_2to4", "UNIT_5P", "pct_subsidized", "med21", "pct_diff", "HHS_1", "HHS_2to4", "HHS_5P", "hu_acre", "Class")
tracts <- row.names(joined_df_clean)
joined_df_clean <- joined_df %>%
select(all_of(myVars)) %>%
mutate_if(is.numeric, function(x) ifelse(is.na(x), median(x, na.rm = T), x))
joined_df_clean_medians <- joined_df_clean %>%
apply(., 2, median)
print(joined_df_clean_medians)
# Export 1
e1 <- joined_df_clean %>%
estimate_profiles(8)
export_1 <- get_data(e1)
# Subset columns
reduced_df <- export_1[myVars_Class]
# Append index
rownames(reduced_df) <- tracts
# Write csv
write.csv(reduced_df, "U:\\FY2022\\Planning\\RegionalHousingInitiative\\SubmarketAnalysis\\data\\LPA_Test3_Submarkets\\lpa_results_3_submarkets.csv", row.names = TRUE)
# Group by cluster and get median
submarket_medians <- aggregate(reduced_df, by = list(reduced_df$Class), FUN = "median")%>%
subset(select = -c(Group.1))
# Export cluster medians
write.csv(submarket_medians, "U:\\FY2022\\Planning\\RegionalHousingInitiative\\SubmarketAnalysis\\data\\LPA_Test3_Submarkets\\cluster_medians.csv")
View(submarket_medians)
rownames(reduced_df) <- tracts
tracts <- row.names(joined_df_clean)
joined_df_clean <- joined_df %>%
select(all_of(myVars)) %>%
mutate_if(is.numeric, function(x) ifelse(is.na(x), median(x, na.rm = T), x))
joined_df_clean_medians <- joined_df_clean %>%
apply(., 2, median)
print(joined_df_clean_medians)
# Export 1
e1 <- joined_df_clean %>%
estimate_profiles(8)
export_1 <- get_data(e1)
# Subset columns
reduced_df <- export_1[myVars_Class]
# Append index
rownames(reduced_df) <- tracts
View(reduced_df)
write.csv(reduced_df, "U:\\FY2022\\Planning\\RegionalHousingInitiative\\SubmarketAnalysis\\data\\LPA_Test3_Submarkets\\lpa_results_3_submarkets.csv", row.names = TRUE)
write.csv(reduced_df, "U:\\FY2022\\Planning\\RegionalHousingInitiative\\SubmarketAnalysis\\data\\LPA_Test3_Submarkets\\lpa_results_3_submarkets.csv", row.names = TRUE)
