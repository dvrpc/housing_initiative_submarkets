library(tidyr)
# Import data
acs2020_raw <- read.csv("U:\\FY2022\\Planning\\RegionalHousingInitiative\\SubmarketAnalysis\\data\\acs5_2020_variables.csv", colClasses = c("GEOID"="character"))
mediansaleprice_subsidizedhousing <- read.csv("U:\\FY2022\\Planning\\RegionalHousingInitiative\\SubmarketAnalysis\\data\\region_tracts_mediansaleprice_subsidizedhousingunits.csv", colClasses = c("geoid"="character")) %>%
rename(subsidizedunits = region_subsidizedhousing_unitsbytract_Total.Subsidized.Units) %>%
mutate(subsidizedunits = ifelse(is.na(subsidizedunits), 0, subsidizedunits))
mediansaleprice_subsidizedhousing <- read.csv("U:\\FY2022\\Planning\\RegionalHousingInitiative\\SubmarketAnalysis\\data\\region_tracts_mediansaleprice_subsidizedhousingunits.csv", colClasses = c("geoid"="character"))
View(mediansaleprice_subsidizedhousing)
mediansaleprice_subsidizedhousing <- read.csv("U:\\FY2022\\Planning\\RegionalHousingInitiative\\SubmarketAnalysis\\data\\region_tracts_mediansaleprice_subsidizedhousingunits.csv", colClasses = c("geoid"="character")) %>%
rename(subsidizedunits = Total.Subsidized.Units) %>%
mutate(subsidizedunits = ifelse(is.na(subsidizedunits), 0, subsidizedunits)) %>%
select(geoid, subsidizedunits, med21, pct_diff)
View(mediansaleprice_subsidizedhousing)
# Author: Brian Carney
# Last Updated: 03/08/2023
#remove.packages("tidycensus")
#install.packages("tidycensus", dependencies = TRUE)
#remove.packages("dplyr")
#install.packages("dplyr", dependencies = TRUE)
# Install necessary packages
#install.packages("censusapi")
#install.packages("tidyverse")
#install.packages("dplyr")
#install.packages("rgdal")
#install.packages("tidycensus")
#update.packages("tidycensus")
# Load packages
library(tidyverse)
library(dplyr)
library(rgdal)
library(tidycensus)
library(censusapi)
#Load Census API key
census_api_key("e6cd8f90ccb0acacdfa5373911a2e73b96dbd792", install=TRUE, overwrite=TRUE)
readRenviron("~/.Renviron")
# acs2020vars <-load_variables(year=2020, dataset="acs5", cache=FALSE)
# dec2020vars <-load_variables(year=2020, dataset="pl", cache=FALSE)
#Region FIPS
fips_region <- c("34005", "34007", "34015", "34021", "42017", "42029", "42045", "42091", "42101")
#Variable List - For Reference
acs5_varlist_2020 <- load_variables(year = 2020,
dataset = "acs5",
cache = TRUE)
#Variable List - For Reference
acs5_varlist_2021 <- load_variables(year = 2021,
dataset = "acs5",
cache = TRUE)
raw_data_tracts <- get_acs(
geography = "tract",
variables = acs5_21_vars,
year = 2021,
survey = "acs5",
outpute = "wide"
) %>%
mutate(year = 2021) %>%
filter(GEOID %in% fips_region) %>%
select(GEOID, year, ends_with("E"), -NAME)%>%
`colnames<-`(str_replace(colnames(.),"E$",""))
#Variable List - For Reference
acs5_varlist_2021 <- load_variables(year = 2021,
dataset = "acs5",
cache = TRUE)
# Define 2021 Variables ----
# Households with Internet Access
acs5_21_vars <- c(
INT_TOT_HH = "B28002_001",
INT_SUBS = "B28002_002",
INT_DIAL = "B28002_003",
INT_BAND = "B28002_004",
INT_CELL = "B28002_005",
INT_SATE = "B28002_009",
INT_NOSU = "B28002_012",
INT_NONE = "B28002_013"
)
raw_data_tracts <- get_acs(
geography = "tract",
variables = acs5_21_vars,
year = 2021,
survey = "acs5",
outpute = "wide"
) %>%
mutate(year = 2021) %>%
filter(GEOID %in% fips_region) %>%
select(GEOID, year, ends_with("E"), -NAME)%>%
`colnames<-`(str_replace(colnames(.),"E$",""))
raw_data_tracts <- get_acs(
geography = "tract",
variables = acs5_21_vars,
year = 2021,
survey = "acs5",
outpute = "wide"
)
raw_data_tracts <- get_acs(
geography = "tract",
variables = acs5_21_vars,
year = 2021,
survey = "acs5",
output = "wide"
)
states = c("NJ", "PA")
raw_data_tracts <- get_acs(
geography = "tract",
variables = acs5_21_vars,
state = states
year = 2021,
survey = "acs5",
output = "wide"
)
states = c("NJ", "PA")
raw_data_tracts <- get_acs(
geography = "tract",
variables = acs5_21_vars,
state = states,
year = 2021,
survey = "acs5",
output = "wide"
)
raw_data_tracts <- get_acs(
geography = "tract",
variables = acs5_21_vars,
state = states,
year = 2021,
survey = "acs5",
output = "wide"
) %>%
mutate(year = 2021) %>%
filter(GEOID %in% fips_region) %>%
select(GEOID, year, ends_with("E"), -NAME)%>%
`colnames<-`(str_replace(colnames(.),"E$",""))
# Author: Brian Carney
# Last Updated: 03/08/2023
#remove.packages("tidycensus")
#install.packages("tidycensus", dependencies = TRUE)
#remove.packages("dplyr")
#install.packages("dplyr", dependencies = TRUE)
# Install necessary packages
#install.packages("censusapi")
#install.packages("tidyverse")
#install.packages("dplyr")
#install.packages("rgdal")
#install.packages("tidycensus")
#update.packages("tidycensus")
# Load packages
library(tidyverse)
library(dplyr)
library(rgdal)
library(tidycensus)
library(censusapi)
#Load Census API key
census_api_key("e6cd8f90ccb0acacdfa5373911a2e73b96dbd792", install=TRUE, overwrite=TRUE)
readRenviron("~/.Renviron")
#Region FIPS
fips_region <- c("34005", "34007", "34015", "34021", "42017", "42029", "42045", "42091", "42101")
#Variable List - For Reference
acs5_varlist_2021 <- load_variables(year = 2021,
dataset = "acs5",
cache = TRUE)
# Define 2021 Variables ----
# Households with Internet Access
acs5_21_vars <- c(
INT_TOT_HH = "B28002_001",
INT_SUBS = "B28002_002",
INT_DIAL = "B28002_003",
INT_BAND = "B28002_004",
INT_CELL = "B28002_005",
INT_SATE = "B28002_009",
INT_NOSU = "B28002_012",
INT_NONE = "B28002_013"
)
states = c("NJ", "PA")
raw_data_tracts <- get_acs(
geography = "tract",
variables = acs5_21_vars,
state = states,
year = 2021,
survey = "acs5",
output = "wide"
) %>%
mutate(year = 2021) %>%
filter(GEOID %in% fips_region) %>%
select(GEOID, year, ends_with("E"), -NAME)%>%
`colnames<-`(str_replace(colnames(.),"E$",""))
raw_data_tracts <- get_acs(
geography = "tract",
variables = acs5_21_vars,
state = states,
year = 2021,
survey = "acs5",
output = "wide"
)
my_states = c("NJ", "PA")
raw_data_tracts <- get_acs(
geography = "tract",
variables = acs5_21_vars,
state = my_states,
year = 2021,
survey = "acs5",
output = "wide"
)
View(raw_data_tracts)
raw_data_tracts <- get_acs(
geography = "tract",
variables = acs5_21_vars,
state = my_states,
year = 2021,
survey = "acs5",
output = "wide"
) %>%
mutate(year = 2021) %>%
filter(GEOID %in% fips_region) %>%
select(GEOID, year, ends_with("E"), -NAME)%>%
`colnames<-`(str_replace(colnames(.),"E$",""))
fips_region <- c("34005", "34007", "34015", "34021", "42017", "42029", "42045", "42091", "42101")
raw_data_tracts <- get_acs(
geography = "tract",
variables = acs5_21_vars,
state = my_states,
year = 2021,
survey = "acs5",
output = "wide"
) %>%
mutate(year = 2021) %>%
filter(GEOID %in% fips_region)
raw_data_tracts <- get_acs(
geography = "tract",
variables = acs5_21_vars,
state = my_states,
year = 2021,
survey = "acs5",
output = "wide"
)
View(raw_data_tracts)
fips_counties <- c("34005", "34007", "34015", "34021", "42017", "42029", "42045", "42091", "42101")
raw_data_tracts <- get_acs(
geography = "tract",
variables = acs5_21_vars,
state = my_states,
county = fips_counties,
year = 2021,
survey = "acs5",
output = "wide"
)
raw_data_tracts <- get_acs(
geography = "tract",
variables = acs5_21_vars,
state = my_states,
county = fips_counties,
year = 2021,
survey = "acs5",
output = "wide"
)
rlang::last_error()
rlang::last_trace()
View(raw_data_tracts)
View(raw_data_tracts)
#Region FIPS
fips_counties <- c("34005%", "34007%", "34015%", "34021%", "42017%", "42029%", "42045", "42091%", "42101%")
#Variable List - For Reference
acs5_varlist_2021 <- load_variables(year = 2021,
dataset = "acs5",
cache = TRUE)
# Define 2021 Variables ----
# Households with Internet Access
acs5_21_vars <- c(
INT_TOT_HH = "B28002_001",
INT_SUBS = "B28002_002",
INT_DIAL = "B28002_003",
INT_BAND = "B28002_004",
INT_CELL = "B28002_005",
INT_SATE = "B28002_009",
INT_NOSU = "B28002_012",
INT_NONE = "B28002_013"
)
my_states = c("NJ", "PA")
raw_data_tracts <- get_acs(
geography = "tract",
variables = acs5_21_vars,
state = my_states,
year = 2021,
survey = "acs5",
output = "wide"
) %>%
mutate(year = 2021) %>%
filter(GEOID %in% fips_counties)
raw_data_tracts <- get_acs(
geography = "tract",
variables = acs5_21_vars,
state = my_states,
year = 2021,
survey = "acs5",
output = "wide"
) %>%
mutate(year = 2021) %>%
filter(str_detect(GEOID, "34005|34007|34015|34021|42017|42029|42045|42091|42101"))
View(raw_data_tracts)
raw_data_tracts <- get_acs(
geography = "tract",
variables = acs5_21_vars,
state = my_states,
year = 2021,
survey = "acs5",
output = "wide"
) %>%
mutate(year = 2021) %>%
filter(str_detect(GEOID, "^34005|^34007|^34015|^34021|^42017|^42029|^42045|^42091|^42101"))
raw_data_tracts <- get_acs(
geography = "tract",
variables = acs5_21_vars,
state = my_states,
year = 2021,
survey = "acs5",
output = "wide"
) %>%
mutate(year = 2021) %>%
filter(str_detect(GEOID, "^34005|^34007|^34015|^34021|^42017|^42029|^42045|^42091|^42101")) %>%
select(GEOID, year, ends_with("E"), -NAME)%>%
`colnames<-`(str_replace(colnames(.),"E$",""))
View(raw_data_tracts)
broadband <- raw_data_trats %>%
summarise_all(sum) %>%
mutate(PCT_BAND = round(100 * (INT_BROAD/INT_TOT_HH), 1)) %>%
mutate(PCT_NOINT = round(100* (INT_NOINT/INT_TOT_HH), 1))
broadband <- raw_data_tracts %>%
summarise_all(sum) %>%
mutate(PCT_BAND = round(100 * (INT_BROAD/INT_TOT_HH), 1)) %>%
mutate(PCT_NOINT = round(100* (INT_NOINT/INT_TOT_HH), 1))
broadband <- raw_data_tracts %>%
summarise_all(sum) %>%
mutate(PCT_BAND = round(100 * (INT_BAND/INT_TOT_HH), 1)) %>%
mutate(PCT_NOINT = round(100* (INT_NONE/INT_TOT_HH), 1))
broadband <- raw_data_tracts %>%
mutate(PCT_BAND = round(100 * (INT_BAND/INT_TOT_HH), 1)) %>%
mutate(PCT_NOINT = round(100* (INT_NONE/INT_TOT_HH), 1))
View(broadband)
View(broadband)
library(RPostgreSQL)
library(RPostgres)
library(DBI)
#
?dbConnect
conn <- dbConnect(
RPostgres::Postgres(),
dbname = "gis",
host = "postgres.dvrpc.org",
port = 5432,
user = "dvrpc_viewer",
password = "viewer"
)
library(RPostgreSQL)
install.packages("RPostgres")
install.packages("RPostgreSQL")
install.packages("DBI")
install.packages("RPostgreSQL")
library(RPostgreSQL)
library(RPostgres)
library(DBI)
?dbConnect
conn <- dbConnect(
RPostgres::Postgres(),
dbname = "gis",
host = "postgres.dvrpc.org",
port = 5432,
user = "dvrpc_viewer",
password = "viewer"
)
#
?dbConnect
conn <- dbConnect(
RPostgres::Postgres(),
dbname = "gis",
host = "gis-db",
port = 5432,
user = "dvrpc_viewer",
password = "viewer"
)
View(conn)
test_file <- dbGetQuery(conn, "SELECT * FROM demographics.census_tracts_2020")
View(test_file)
View(test_file)
broadband_shapefile <- test_file %>%
left_join(broadband, by.x="GEOID", by.y="geoid")
library(dplyr)
broadband_shapefile <- test_file %>%
left_join(broadband, by.x="GEOID", by.y="geoid")
broadband_shapefile <- test_file %>%
left_join(broadband, by=c("geoid", "GEOID"))
colnames(test_file)
colnames(broadband)
#
?dbConnect
conn <- dbConnect(
RPostgres::Postgres(),
dbname = "gis",
host = "gis-db",
port = 5432,
user = "dvrpc_viewer",
password = "viewer"
)
#Load Census API key
census_api_key("e6cd8f90ccb0acacdfa5373911a2e73b96dbd792", install=TRUE, overwrite=TRUE)
readRenviron("~/.Renviron")
#Region FIPS
fips_counties <- c("34005%", "34007%", "34015%", "34021%", "42017%", "42029%", "42045", "42091%", "42101%")
#Variable List - For Reference
acs5_varlist_2021 <- load_variables(year = 2021,
dataset = "acs5",
cache = TRUE)
# Define 2021 Variables ----
# Households with Internet Access
acs5_21_vars <- c(
INT_TOT_HH = "B28002_001",
INT_SUBS = "B28002_002",
INT_DIAL = "B28002_003",
INT_BAND = "B28002_004",
INT_CELL = "B28002_005",
INT_SATE = "B28002_009",
INT_NOSU = "B28002_012",
INT_NONE = "B28002_013"
)
my_states = c("NJ", "PA")
raw_data_tracts <- get_acs(
geography = "tract",
variables = acs5_21_vars,
state = my_states,
year = 2021,
survey = "acs5",
output = "wide"
) %>%
mutate(year = 2021) %>%
filter(str_detect(GEOID, "^34005|^34007|^34015|^34021|^42017|^42029|^42045|^42091|^42101")) %>%
select(GEOID, year, ends_with("E"), -NAME)%>%
`colnames<-`(str_replace(colnames(.),"E$",""))
broadband <- raw_data_tracts %>%
mutate(PCT_BAND = round(100 * (INT_BAND/INT_TOT_HH), 1)) %>%
mutate(PCT_NOINT = round(100* (INT_NONE/INT_TOT_HH), 1))
test_file <- dbGetQuery(conn, "SELECT * FROM demographics.census_tracts_2020")
broadband_shapefile <- test_file %>%
left_join(broadband, by=c("geoid", "GEOID"))
library(tidyverse)
library(dplyr)
library(rgdal)
library(tidycensus)
library(censusapi)
library(RPostgreSQL)
library(RPostgres)
library(DBI)
#
?dbConnect
conn <- dbConnect(
RPostgres::Postgres(),
dbname = "gis",
host = "gis-db",
port = 5432,
user = "dvrpc_viewer",
password = "viewer"
)
#Load Census API key
census_api_key("e6cd8f90ccb0acacdfa5373911a2e73b96dbd792", install=TRUE, overwrite=TRUE)
readRenviron("~/.Renviron")
#Region FIPS
fips_counties <- c("34005%", "34007%", "34015%", "34021%", "42017%", "42029%", "42045", "42091%", "42101%")
#Variable List - For Reference
acs5_varlist_2021 <- load_variables(year = 2021,
dataset = "acs5",
cache = TRUE)
# Define 2021 Variables ----
# Households with Internet Access
acs5_21_vars <- c(
INT_TOT_HH = "B28002_001",
INT_SUBS = "B28002_002",
INT_DIAL = "B28002_003",
INT_BAND = "B28002_004",
INT_CELL = "B28002_005",
INT_SATE = "B28002_009",
INT_NOSU = "B28002_012",
INT_NONE = "B28002_013"
)
my_states = c("NJ", "PA")
raw_data_tracts <- get_acs(
geography = "tract",
variables = acs5_21_vars,
state = my_states,
year = 2021,
survey = "acs5",
output = "wide"
) %>%
mutate(year = 2021) %>%
filter(str_detect(GEOID, "^34005|^34007|^34015|^34021|^42017|^42029|^42045|^42091|^42101")) %>%
select(GEOID, year, ends_with("E"), -NAME)%>%
`colnames<-`(str_replace(colnames(.),"E$",""))
broadband <- raw_data_tracts %>%
mutate(PCT_BAND = round(100 * (INT_BAND/INT_TOT_HH), 1)) %>%
mutate(PCT_NOINT = round(100* (INT_NONE/INT_TOT_HH), 1))
test_file <- dbGetQuery(conn, "SELECT * FROM demographics.census_tracts_2020")
broadband_shapefile <- test_file %>%
left_join(broadband, by=c("geoid", "GEOID"))
View(broadband)
View(test_file)
View(test_file)
broadband_shapefile <- test_file %>%
left_join(broadband, by=c("geoid"))
broadband_shapefile <- test_file %>%
left_join(broadband, by=c("geoid" = "GEOID"))
View(broadband_shapefile)
install.packages("st_write")
library(st_write)
st_write(broadband_shapefile, "G:\\My Drive\\BroadBandShapefile\\acs5_2021_region_tracts_broadband.shp")
View(broadband_shapefile)
write.csv(broadband, "G:\\My Drive\\ACS5_2021_Tracts_Region_Broadband\\acs5_21_tracts_region_broadband.csv")
source("secrets.R")
census_api_key(CENSUS_API_KEY, install=TRUE, overwrite=TRUE)
readRenviron("~/.Renviron")
